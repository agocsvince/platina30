{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/GitHub/platina3000/src/MostEpulContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport UrlMaker from './components/UrlMaker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MostEpulContext = /*#__PURE__*/createContext();\nexport const MostEpulProvider = props => {\n  _s();\n\n  // State for mostEpuls\n  const [mostEpuls, setMostEpuls] = useState([]); // State for letting know when is the content fetched\n\n  const [isLoaded, setIsLoaded] = useState(false); // Fetch data from CMS\n\n  useEffect(() => {\n    const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20mostEpuls%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`;\n    fetch(url).then(res => res.json()).then(json => {\n      setMostEpuls(json.data.mostEpuls);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  if (isLoaded) {\n    mostEpuls.forEach(mostEpul => {\n      mostEpul.url = UrlMaker(mostEpul.title);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(MostEpulContext.Provider, {\n    value: {\n      mostEpuls,\n      isLoaded\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MostEpulProvider, \"g67G8/Isw8xu5GUcpSLP+ytG96w=\");\n\n_c = MostEpulProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostEpulProvider\");","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina3000/src/MostEpulContext.js"],"names":["React","useState","useEffect","createContext","UrlMaker","MostEpulContext","MostEpulProvider","props","mostEpuls","setMostEpuls","isLoaded","setIsLoaded","url","fetch","then","res","json","data","forEach","mostEpul","title","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,OAAzD;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AAEP,OAAO,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACvC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CAFuC,CAIvC;;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC,CALuC,CAOvC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,GAAG,GAAI,sUAAb;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACVP,MAAAA,YAAY,CAACO,IAAI,CAACC,IAAL,CAAUT,SAAX,CAAZ;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KALD;AAMH,GARQ,EAQP,EARO,CAAT;;AASA,MAAID,QAAJ,EAAc;AACVF,IAAAA,SAAS,CAACU,OAAV,CAAkBC,QAAQ,IAAI;AAC1BA,MAAAA,QAAQ,CAACP,GAAT,GAAeR,QAAQ,CAACe,QAAQ,CAACC,KAAV,CAAvB;AACH,KAFD;AAGH;;AACD,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACZ,MAAAA,SAAD;AAAYE,MAAAA;AAAZ,KAAjC;AAAA,cACKH,KAAK,CAACc;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BM;;GAAMf,gB;;KAAAA,gB","sourcesContent":["import React, {useState, useEffect, createContext } from 'react';\nimport UrlMaker from './components/UrlMaker';\n\nexport const MostEpulContext = createContext();\n\nexport const MostEpulProvider = (props) => {\n    // State for mostEpuls\n    const [mostEpuls, setMostEpuls] = useState([]);\n\n    // State for letting know when is the content fetched\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    // Fetch data from CMS\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20mostEpuls%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20url%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`       \n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n            setMostEpuls(json.data.mostEpuls);\n            setIsLoaded(true);\n        });\n    },[])\n    if (isLoaded) {\n        mostEpuls.forEach(mostEpul => {\n            mostEpul.url = UrlMaker(mostEpul.title)\n        })\n    }\n    return(\n        <MostEpulContext.Provider value={{mostEpuls, isLoaded}}>\n            {props.children}\n        </MostEpulContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}