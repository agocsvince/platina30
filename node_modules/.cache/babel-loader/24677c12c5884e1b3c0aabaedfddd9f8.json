{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/platina3000/platina300/src/components/ReferenceDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { ReferenceContext } from '../ReferenceContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReferenceDetail = props => {\n  _s();\n\n  // Current photo index\n  const [photoIndex, setPhotoIndex] = useState(0); // LightBox state: true/false\n\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    references\n  } = useContext(ReferenceContext);\n  let {\n    project\n  } = useParams();\n  const [currentProject, setCurrentProject] = useState({});\n  const [gallery, setGallery] = useState([]);\n  let urlExtend = '../images/'; // Get current project from Context\n\n  useEffect(() => {\n    let current = references.filter(reference => reference.subtitle === project);\n  }, []); // Set images\n\n  const prevImg = () => {\n    if (photoIndex === 0) {\n      return urlExtend + gallery[gallery.length];\n    }\n\n    return urlExtend + gallery[(photoIndex - 1) % gallery.length].fileName;\n  };\n\n  const nextImg = () => {\n    if (photoIndex === gallery.length) {\n      return urlExtend + gallery[0].fileName;\n    }\n\n    return urlExtend + gallery[(photoIndex - 1) % gallery.length];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"wip\",\n    className: \"py-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text ml-4 mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-05\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          class: \"slash\",\n          children: \"\\\\\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 43\n        }, this), \" Referenci\\xE1k\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-2\",\n        id: \"name\",\n        \"data-name\": project,\n        children: currentProject.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images grid m-4\",\n      children: gallery.map(current =>\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      _jsxDEV(\"a\", {\n        className: \"image\",\n        onClick: () => {\n          setIsOpen(true);\n          setPhotoIndex(gallery.indexOf(current));\n        },\n        title: current.fileName,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: current.url,\n          alt: \"\",\n          style: Border\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, current.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: gallery[photoIndex].url,\n        nextSrc: nextImg(),\n        prevSrc: prevImg(),\n        enableZoom: false,\n        imageTitle: gallery[photoIndex].fileName,\n        onCloseRequest: () => setIsOpen(false),\n        onMovePrevRequest: () => setPhotoIndex((photoIndex + gallery.length - 1) % gallery.length),\n        onMoveNextRequest: () => setPhotoIndex((photoIndex + 1) % gallery.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReferenceDetail, \"5ocPIa+q2Kowqx8SnhUxJ3bZWJ0=\", false, function () {\n  return [useParams];\n});\n\n_c = ReferenceDetail;\nconst Border = {\n  borderRadius: '5px'\n};\nexport default ReferenceDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceDetail\");","map":{"version":3,"sources":["/Users/vinceagocs/Documents/platina3000/platina300/src/components/ReferenceDetail.js"],"names":["React","useContext","useEffect","useState","useParams","Lightbox","ReferenceContext","ReferenceDetail","props","photoIndex","setPhotoIndex","isOpen","setIsOpen","references","project","currentProject","setCurrentProject","gallery","setGallery","urlExtend","current","filter","reference","subtitle","prevImg","length","fileName","nextImg","title","map","indexOf","url","Border","id","borderRadius"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { ReferenceContext } from '../ReferenceContext';\n\n\nconst ReferenceDetail = props => {\n\n    // Current photo index\n    const [photoIndex, setPhotoIndex] = useState(0);\n    // LightBox state: true/false\n    const [isOpen, setIsOpen] = useState(false);\n\n    const { references } = useContext(ReferenceContext);\n\n    let { project } = useParams();\n    const [ currentProject, setCurrentProject] = useState({});\n    const [ gallery, setGallery] = useState([]);\n\n\n    let urlExtend = '../images/';\n\n    // Get current project from Context\n    useEffect(() => {\n        let current = references.filter(reference => reference.subtitle === project)\n    },[]);\n    \n\n    // Set images\n    const prevImg = () => {\n        if (photoIndex === 0){\n            return urlExtend+gallery[gallery.length];\n        }  \n        return urlExtend+gallery[(photoIndex - 1) % gallery.length].fileName;\n    }\n\n    const nextImg = () => {\n        if (photoIndex === gallery.length){\n            return urlExtend+gallery[0].fileName;\n        }  \n        return urlExtend+gallery[(photoIndex - 1) % gallery.length];\n    }\n\n    return (\n        <section id=\"wip\" className=\"py-1\">\n                <div className=\"text ml-4 mt-2\">\n                    <h4 className=\"mb-05\"><strong class=\"slash\">\\</strong> Referenci√°k</h4>\n                    <h2 className=\"mb-2\" id=\"name\" data-name={project}>{currentProject.title}</h2>\n                </div>\n                <div className=\"images grid m-4\">\n                {gallery.map(current => (\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    <a className=\"image\" onClick={() => {setIsOpen(true); setPhotoIndex(gallery.indexOf(current))}} title={current.fileName} key={current.id}>\n                        <img src={current.url} alt=\"\" style={Border}/>\n                    </a>\n                ))}\n                </div>\n                <div>\n        {isOpen && (\n          <Lightbox\n            mainSrc={gallery[photoIndex].url}\n            nextSrc={nextImg()}\n            prevSrc={prevImg()}\n            enableZoom={false}\n            imageTitle={gallery[photoIndex].fileName}\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + gallery.length - 1) % gallery.length)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % gallery.length)}\n          />\n        )}\n      </div>     \n    </section>\n    );\n    \n\n}\n\nconst Border = {\n        borderRadius: '5px'\n}\n                \n\nexport default ReferenceDetail;"]},"metadata":{},"sourceType":"module"}