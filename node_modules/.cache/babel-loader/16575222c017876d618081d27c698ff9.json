{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/platina3000/platina300/src/components/LightBox.js\";\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = ['//placekitten.com/1500/500', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\n\nclass LightboxExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      photoIndex,\n      isOpen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          isOpen: true\n        }),\n        children: \"Open Lightbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: images[photoIndex],\n        nextSrc: images[(photoIndex + 1) % images.length],\n        prevSrc: images[(photoIndex + images.length - 1) % images.length],\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        }),\n        onMovePrevRequest: () => this.setState({\n          photoIndex: (photoIndex + images.length - 1) % images.length\n        }),\n        onMoveNextRequest: () => this.setState({\n          photoIndex: (photoIndex + 1) % images.length\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/vinceagocs/Documents/platina3000/platina300/src/components/LightBox.js"],"names":["React","Component","Lightbox","images","LightboxExample","constructor","props","state","photoIndex","isOpen","render","setState","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAGA,MAAMC,MAAM,GAAG,CACX,4BADW,EAEX,6BAFW,EAGX,4BAHW,EAIX,6BAJW,CAAf;;AAQA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,CADD;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAyB,KAAKF,KAApC;AAEA,wBACE;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGA,MAAM,iBACL,QAAC,QAAD;AACE,QAAA,OAAO,EAAEN,MAAM,CAACK,UAAD,CADjB;AAEE,QAAA,OAAO,EAAEL,MAAM,CAAC,CAACK,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACS,MAA3B,CAFjB;AAGE,QAAA,OAAO,EAAET,MAAM,CAAC,CAACK,UAAU,GAAGL,MAAM,CAACS,MAApB,GAA6B,CAA9B,IAAmCT,MAAM,CAACS,MAA3C,CAHjB;AAIE,QAAA,cAAc,EAAE,MAAM,KAAKD,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAd,CAJxB;AAKE,QAAA,iBAAiB,EAAE,MACjB,KAAKE,QAAL,CAAc;AACZH,UAAAA,UAAU,EAAE,CAACA,UAAU,GAAGL,MAAM,CAACS,MAApB,GAA6B,CAA9B,IAAmCT,MAAM,CAACS;AAD1C,SAAd,CANJ;AAUE,QAAA,iBAAiB,EAAE,MACjB,KAAKD,QAAL,CAAc;AACZH,UAAAA,UAAU,EAAE,CAACA,UAAU,GAAG,CAAd,IAAmBL,MAAM,CAACS;AAD1B,SAAd;AAXJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAvCiC","sourcesContent":["import React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\n\n\nconst images = [\n    '//placekitten.com/1500/500',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n  ];\n  \n\nclass LightboxExample extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          photoIndex: 0,\n          isOpen: false,\n        };\n      }\n    \n      render() {\n        const { photoIndex, isOpen } = this.state;\n    \n        return (\n          <div>\n            <button type=\"button\" onClick={() => this.setState({ isOpen: true })}>\n              Open Lightbox\n            </button>\n    \n            {isOpen && (\n              <Lightbox\n                mainSrc={images[photoIndex]}\n                nextSrc={images[(photoIndex + 1) % images.length]}\n                prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                onCloseRequest={() => this.setState({ isOpen: false })}\n                onMovePrevRequest={() =>\n                  this.setState({\n                    photoIndex: (photoIndex + images.length - 1) % images.length,\n                  })\n                }\n                onMoveNextRequest={() =>\n                  this.setState({\n                    photoIndex: (photoIndex + 1) % images.length,\n                  })\n                }\n              />\n            )}\n          </div>\n        );\n      }\n}\n"]},"metadata":{},"sourceType":"module"}