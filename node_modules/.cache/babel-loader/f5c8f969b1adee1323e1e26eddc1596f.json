{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/platina3000/platina300/src/components/ReferenceDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReferenceDetail = props => {\n  _s();\n\n  const [photoIndex, setPhotoIndex] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  let {\n    project\n  } = useParams();\n  const [currentProject, setCurrentProject] = useState([]);\n  let urlExtend = '../images/';\n  const images = ['../csomor-1.jpg', '//placekitten.com/4000/3000', '//placekitten.com/800/1200', '//placekitten.com/1500/1500'];\n  useEffect(() => {\n    const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(where%3A%20%7Btitle%3A%20%22${project}%22%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20references%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20picture%20%7B%0A%20%20%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&operationName=MyQuery`;\n    fetch(url).then(res => res.json()).then(json => setCurrentProject(json.data.referenciaks[0].references));\n  }, [project]);\n  console.log(currentProject);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"wip\",\n    className: \"py-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text ml-4 mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-05\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          class: \"slash\",\n          children: \"\\\\\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 43\n        }, this), \" Referenci\\xE1k\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-2\",\n        id: \"name\",\n        \"data-name\": project,\n        children: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images grid m-4\",\n      children: currentProject.map(current => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"image\",\n        onClick: () => setIsOpen(true),\n        title: current.picture.fileName,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlExtend + current.picture.fileName,\n          alt: \"\",\n          style: Border\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: current.picture.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: current.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: current.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, current.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: images[photoIndex],\n        nextSrc: images[(photoIndex + 1) % images.length],\n        prevSrc: images[(photoIndex + images.length - 1) % images.length],\n        onCloseRequest: () => setIsOpen(false),\n        onMovePrevRequest: () => setPhotoIndex((photoIndex + images.length - 1) % images.length),\n        onMoveNextRequest: () => setPhotoIndex((photoIndex + 1) % images.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReferenceDetail, \"CovTqQWtGRmeXQu78EAnstBAkPc=\", false, function () {\n  return [useParams];\n});\n\n_c = ReferenceDetail;\nconst Border = {\n  borderRadius: '5px'\n};\nexport default ReferenceDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceDetail\");","map":{"version":3,"sources":["/Users/vinceagocs/Documents/platina3000/platina300/src/components/ReferenceDetail.js"],"names":["React","useEffect","useState","Component","useParams","Lightbox","ReferenceDetail","props","photoIndex","setPhotoIndex","isOpen","setIsOpen","project","currentProject","setCurrentProject","urlExtend","images","url","fetch","then","res","json","data","referenciaks","references","console","log","map","current","picture","fileName","Border","title","id","length","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\n\n\nconst ReferenceDetail = props => {\n    const [photoIndex, setPhotoIndex] = useState(0)\n    const [isOpen, setIsOpen] = useState(false)\n\n    let { project } = useParams();\n    const [ currentProject, setCurrentProject] = useState([])\n    let urlExtend = '../images/'\n   \n    const images = [\n    '../csomor-1.jpg',\n    '//placekitten.com/4000/3000',\n    '//placekitten.com/800/1200',\n    '//placekitten.com/1500/1500',\n    ];\n\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(where%3A%20%7Btitle%3A%20%22${project}%22%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20references%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20picture%20%7B%0A%20%20%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&operationName=MyQuery`       \n        fetch(url)\n        .then(res => res.json())\n        .then(json => setCurrentProject(json.data.referenciaks[0].references));\n    },[project])\n    console.log(currentProject)\n  \n    return (\n        <section id=\"wip\" className=\"py-1\">\n                <div className=\"text ml-4 mt-2\">\n                    <h4 className=\"mb-05\"><strong class=\"slash\">\\</strong> Referenci√°k</h4>\n                    <h2 className=\"mb-2\" id=\"name\" data-name={project}>{project}</h2>\n                </div>\n                <div className=\"images grid m-4\">\n                {currentProject.map(current => (\n                    <a className=\"image\"  onClick={() => setIsOpen(true)} title={current.picture.fileName} key={current.id}>\n                        <img src={urlExtend+current.picture.fileName} alt=\"\" style={Border}/>\n                        <p>{current.picture.fileName}</p>\n                        <p>{current.title}</p>\n                        <p>{current.id}</p>\n                    </a>\n                ))}\n                </div>\n                <div>\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => setIsOpen(false)}\n            onMovePrevRequest={() =>\n              setPhotoIndex((photoIndex + images.length - 1) % images.length,)\n            }\n            onMoveNextRequest={() =>\n              setPhotoIndex((photoIndex + 1) % images.length)}\n          />\n        )}\n      </div>     \n    </section>\n    )\n    \n\n}\n\nconst Border = {\n        borderRadius: '5px'\n}\n                \n\nexport default ReferenceDetail;"]},"metadata":{},"sourceType":"module"}