{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/GitHub/platina3000/src/components/MySlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySlider = props => {\n  _s();\n\n  const [slider, setSlider] = useState([]);\n  useEffect(() => {\n    const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20sliders%20%7B%0A%20%20%20%20pictures%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%09url%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`;\n    fetch(url).then(res => res.json()).then(json => setSlider(json.data.sliders[0].pictures));\n  }, []);\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1.5,\n    autoplay: true,\n    autoplaySpeed: 400,\n    centerMode: true,\n    rows: 1,\n    cssEase: \"linear\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: slider.map(slide => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swiper-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: \"url(\" + slide.url + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 63\n        }, this)\n      }, slide.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MySlider, \"aXozZSE7rEPWs4yUvl+tJiwtwpo=\");\n\n_c = MySlider;\nexport default MySlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySlider\");","map":{"version":3,"sources":["/Users/vinceagocs/Documents/GitHub/platina3000/src/components/MySlider.js"],"names":["React","useEffect","useState","Slider","MySlider","props","slider","setSlider","url","fetch","then","res","json","data","sliders","pictures","settings","infinite","speed","slidesToShow","autoplay","autoplaySpeed","centerMode","rows","cssEase","map","slide","backgroundImage","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,GAAG,GAAI,gQAAb;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkB,CAAlB,EAAqBC,QAAtB,CAFvB;AAGH,GALQ,EAKN,EALM,CAAT;AAQA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,QAAQ,EAAE,IADG;AAEbC,IAAAA,KAAK,EAAE,GAFM;AAGbC,IAAAA,YAAY,EAAE,GAHD;AAIbC,IAAAA,QAAQ,EAAE,IAJG;AAKbC,IAAAA,aAAa,EAAC,GALD;AAMbC,IAAAA,UAAU,EAAC,IANE;AAObC,IAAAA,IAAI,EAAC,CAPQ;AAQbC,IAAAA,OAAO,EAAE;AARI,GAAjB;AAWA,sBACI;AAAA,2BACI,QAAC,MAAD,OAAYR,QAAZ;AAAA,gBACCV,MAAM,CAACmB,GAAP,CAAWC,KAAK,iBACb;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAA8C;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAC,SAASD,KAAK,CAAClB,GAAf,GAAqB;AAAtC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAA9C,SAAmCkB,KAAK,CAACE,EAAzC;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA/BD;;GAAMxB,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\n\n\nconst MySlider = props => {\n    const [slider, setSlider] = useState([]);\n\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20sliders%20%7B%0A%20%20%20%20pictures%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%09url%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D&operationName=MyQuery`;\n        fetch(url)\n        .then(res => res.json())\n        .then(json => setSlider(json.data.sliders[0].pictures));\n    }, []);\n\n\n    const settings = {\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1.5,\n        autoplay: true,\n        autoplaySpeed:400,\n        centerMode:true,\n        rows:1,\n        cssEase: \"linear\"\n      };\n\n    return (\n        <div>\n            <Slider {...settings}>\n            {slider.map(slide => (\n                <div className='swiper-slide' key={slide.id} ><div style={{backgroundImage:\"url(\" + slide.url + \")\"}}></div></div>\n            ))}\n            </Slider>\n        </div>\n    )\n}\n\nexport default MySlider;"]},"metadata":{},"sourceType":"module"}