{"ast":null,"code":"var _jsxFileName = \"/Users/vinceagocs/Documents/platina3000/platina300/src/ReferenceContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReferenceContext = /*#__PURE__*/createContext();\nexport const ReferenceProvider = props => {\n  _s();\n\n  const [references, setReferences] = useState([]);\n  useEffect(() => {\n    const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(where%3A%20%7Bsubtitle%3A%20%22${project}%22%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20subtitle%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20locale%0A%20%20%20%20%20%20url%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&operationName=MyQuery`;\n    fetch(url).then(res => res.json()).then(json => {\n      setReferences(json.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // {themes:themes, setThemes:setThemes, ... if the name is the same, : is not needed}\n    _jsxDEV(ReferenceContext.Provider, {\n      value: {\n        references,\n        setReferences\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(ReferenceProvider, \"cHSzXriIjfIYH/hxEAF5lQENfAM=\");\n\n_c = ReferenceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceProvider\");","map":{"version":3,"sources":["/Users/vinceagocs/Documents/platina3000/platina300/src/ReferenceContext.js"],"names":["React","useState","useEffect","createContext","ReferenceContext","ReferenceProvider","props","references","setReferences","url","project","fetch","then","res","json","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,aAApC,QAAwD,OAAxD;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGD,aAAa,EAAtC;AAEP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,GAAG,GAAI,6JAA4JC,OAAQ,oPAAjL;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACVN,MAAAA,aAAa,CAACM,IAAI,CAACC,IAAN,CAAb;AACH,KAJD;AAKH,GAPQ,EAOP,EAPO,CAAT;AASA;AAAA;AACI;AACA,YAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAE;AAACR,QAAAA,UAAD;AAAaC,QAAAA;AAAb,OAAlC;AAAA,gBACKF,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMH,CAlBM;;GAAMX,iB;;KAAAA,iB","sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\n\nexport const ReferenceContext = createContext();\n\nexport const ReferenceProvider = (props) => {\n    const [references, setReferences] = useState([])\n\n    useEffect(() => {\n        const url = `https://api-eu-central-1.graphcms.com/v2/ckwq5z05y2e8n01xmgomm92ka/master?query=query%20MyQuery%20%7B%0A%20%20referenciaks(where%3A%20%7Bsubtitle%3A%20%22${project}%22%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20title%0A%20%20%20%20subtitle%0A%20%20%20%20gallery%20%7B%0A%20%20%20%20%20%20fileName%0A%20%20%20%20%20%20locale%0A%20%20%20%20%20%20url%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&operationName=MyQuery`       \n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n            setReferences(json.data)\n        });\n    },[])\n\n    return(\n        // {themes:themes, setThemes:setThemes, ... if the name is the same, : is not needed}\n        <ReferenceContext.Provider value={{references, setReferences}}>\n            {props.children}\n        </ReferenceContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}